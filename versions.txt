Version information. The versions are tagged in CVS using the naming convention
  Atomic1_1_1
Changes sorted as follows
Bug: Bug fixes.
Opt: Optimisations.
Alt: Alterations for cosmetic/usage reasons or improved accuracy (not bugs).
Add: Added functionality.
Del: Removed functionality.
-------------------------------------------------------------------------------

Bug: CIIntegralsMBPT::ReadMultipleOneElectronIntegrals(); Added variable
     mbpt to Atom to fix scoping error in Atom::RunOpen(); SMS was wrong
     in CIIntegralsMBPT; Limits on an integral in 
     MBPT::CalculateTwoElectron2().
Opt: Vector resize eliminated from CIIntegrals::UpdateTwoElectronIntegrals;
     order of loops in CIIntegralsMBPT::UpdateTwoElectronIntegrals;
     method of swapping in CIIntegralsMBPT::TwoElectronIntegralOrdering().
     StateIntegrator::HamiltonianMatrixElement() checks core polarisation
     before calculating.
Alt: Core::Clear() overwritten to erase OpenShellStates also. Core::Read/Write
     modified to store OpenShellStates; StateManager::Read() modified to only
     replace existing states.
Add: Support for APAC AC in make.machine.

1.2.0 - 09/06/05
Add: Ability to have no "core" electrons (i.e. all electrons in open shell);
     can reduce number of integrals stored for CI using CIIntegrals class.
     Support for MBPT + CI using new CIIntegralsMBPT class, which also has MPI
     support; added Brillouin-Wigner perturbation theory to MBPTCalculator;
     improved calculation of SigmaPotential in MBPTCalculator and separated it
     from calculation of matrix elements. Added two-electron integrals and
     one-electron subtraction diagrams to MBPTCalculator.
     Added bool Core::IsOpenShellCore().
Opt: MBPTCalculator::GetSecondOrderSigma(); Constant::Wigner3j() to use
     static vectors; CoulombIntegrator::FastCoulombIntegrate() has alternative
     fast interface, as does SigmaPotential::AddToSigma().
Alt: Moved Coulomb and SMS integral storage from HamiltonianMatrix to new
     class CIIntegrals.
Bug: StateIntegrator::IsotopeShiftIntegral() limits of integration for
     potential and matrix element separated.

1.1.5 - 11/04/05
Bug: DiscreteState::CheckSize() remove numerical wobbles at tail;
     Core::UpdateExcitedState() checks if state is in open shells first;
     removed lucky zero in HamiltonianMatrix::GetSz(); removed lucky zero
     from Core::IterateDiscreteStateGreens():exchange potential.
     ExcitedStates::Orthogonalise() orthogonalise to states with smaller
     pqn only (this is needed when all states are updated).
     Core::CalculateVolumeShiftPotential() was wrong.
Opt: MBPTCalculator::CalculateCorrelation* uses Constant::Electron3j();
     RStates and CustomBasis update using previous HF states instead of
     just rebuilding from scratch.
Alt: Maximum iterations of Davidson method changed from 2000 -> 20000;
     added size in atomic units to Debug::LogHFIterations output.

1.1.4 - 08/03/05
Alt: New method of converging Hartree-Fock by damping changes in electron
     states at each iteration. Big changes to Core::Update() and
     Core::CalculateExcitedState().
Bug: HamiltonianMatrix::~HamiltonianMatrix(): check to see if M is NULL
     before deletion; State::NumZeroes now removes start and tail to exclude
     small oscillations about zero.
Add: Support for jcb2pc in make.machine.
Del: Convergence method based on tail matching, except for local exchange
     approximation. Thus CalculateDiscreteState->ConvergeStateApproximation.
Del: UpdateHFPotentialNoSelfInteraction() and
     CalculateExchangeNoSelfInteraction() are no longer required.

1.1.3 - 22/02/05
Bug: FeII configuration; sign in GetSMSIntegral().
Alt: Atom.h and Atom/OpenShellEnergy(); call to DSPEVX in Davidson changed
     to improve accuracy.
Opt: MPIMatrix modified for better load distribution and moved to 
     Configuration; SMS in HamiltonianMatrix (which introduced the bug that
     needed fixing).
Add: CorePolarisability and Core::GetRadius(); Matrix::GetDiagonal();
     versions.txt (this file).

1.1.2
Opt: GenerateProjections for MPI.
Bug: GetEigenvalue wasn't providing space for MPI::Reduce().

1.1.1
Del: HFExcitedStates.
Bug: BSplineGrid::CreateSplineKnots().

1.1
Opt: Many.
Add: Compilations options for linux cluster; parallel support using MPI;
     link to f77 directly (no more f2c).
Alt: I/O; interface functions in Atom; DebugOptions altered, made global;
     Merged RelativisticInfo, SingleParticleInfo with StateInfo.
Bug: Memory leak in Core::CalculateDiscreteState().

1.1.1.1
non-parallel, Win32 + Unix, HF + CI + MBPT (single particle only)
