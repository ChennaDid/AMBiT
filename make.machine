# change this stuff only if you know what you are doing
# Options specific to Atomic source code are
#   -DAMBIT_USE_MPI       - To use MPI
#   -DAMBIT_USE_SCALAPACK - To use ScaLAPACK
#   -D_FSU=1     - Append underscores to fortran subroutine names (default)
#   -D_FSU=0     - Do not append underscores to fortran subroutine names

HOSTNAME = $(shell hostname)

MACHINE = default

ifeq ($(findstring vayu, $(HOSTNAME)), vayu)
  MACHINE = ncixe
endif
ifeq ($(findstring xe, $(HOSTNAME)), xe)
  MACHINE = ncixe
endif
ifeq ($(findstring katana, $(HOSTNAME)), katana)
  MACHINE = katana
endif
ifeq ($(HOSTNAME), jcb1pc)
  MACHINE = jcb1pc
endif

SRCDIR = $(shell pwd)

# Override these below, if necessary
ANGULAR_DATA_DIRECTORY=$(SRCDIR)/AngularData
EIGEN_INCLUDE_DIR = /usr/local/include/Eigen3
GTEST_INCLUDE_DIR = $(SRCDIR)
GTEST_LIBS_DIR    = $(SRCDIR)/gtest

INCLUDE = $(SRCDIR) $(EIGEN_INCLUDE_DIR)

ifeq ($(MACHINE), default)
  CC  = gcc
  CXX = g++ -std=c++11 -Wno-deprecated-register -Wno-unused-result
  F77 = gfortran

  LINK      = g++
  LINKFLAGS =
  LIBDIR    = /usr/local/lib
  LIBS      = boost_filesystem boost_system lapack blas

  INCLUDE  += /usr/local/include

  ifdef debug
    BUILD     = Debug
    CXXFLAGS  = -g
    CFLAGS    = -g
  else
    BUILD     = Release
    CXXFLAGS  = -O3
    CFLAGS    = -O3
    F77FLAGS  = -O2
  endif

  CCDEP   = gcc -std=c++11
  DEPFLAG = -MM
endif

ifeq ($(MACHINE), ncixe)
  CC  = icc
  CXX = mpiCC
  F77 = ifort

  LINK      = mpiCC
  LINKFLAGS = 
  LIBDIR    = $(MKL)/lib/em64t
  LIBOBJ    = $(MKL)/lib/em64t/libmkl_scalapack_lp64.a \
              $(MKL)/lib/em64t/libmkl_blacs_openmpi_lp64.a
  LIBS      = mkl_intel_lp64 mkl_intel_thread mkl_core mkl_em64t guide pthread

  INCLUDE  +=

  ifdef debug
    BUILD     = Debug
    CFLAGS   += -g
    CXXFLAGS += -g
  else
    BUILD     = Release
    CFLAGS   += -O2
    CXXFLAGS += -O2
    F77FLAGS += -O2 -fpe0 -static -nofor_main
  endif

  CXXFLAGS += -wd1125 -DAMBIT_USE_MPI #-DAMBIT_USE_SCALAPACK

  CCDEP   = gcc
  DEPFLAG = -MM
endif

ifeq ($(MACHINE), katana)
  CC  = mpiCC
  CXX = mpiCC -std=c++11 #-fopenmp
  F77 = ifort

  ANGULAR_DATA_DIRECTORY = /srv/scratch/ambit/AngularData

  LINK      = mpiCC #icpc
  LINKFLAGS = 
  LIBDIR    = $(MKLROOT)/lib/intel64/
  LIBOBJ    = 
  LIBS      = mkl_scalapack_lp64 mkl_intel_lp64 mkl_core mkl_sequential mkl_blacs_openmpi_lp64 boost_filesystem boost_system pthread m

  INCLUDE  += /share/apps/sparsehash/2.0.2/include

  ifdef debug
    BUILD     = Debug
    CFLAGS    = -g
    CXXFLAGS  = -g
  else
    BUILD     = Release
    CFLAGS    = -O2
    CXXFLAGS  = -O3
    F77FLAGS  = -O2 -fpe0 -static -nofor_main
  endif

  CXXFLAGS += -wd1125 -DEIGEN_USE_MKL_ALL -DAMBIT_USE_MPI -DAMBIT_USE_SCALAPACK

  CCDEP   = gcc -std=c++11
  DEPFLAG = -MM
endif

ifeq ($(MACHINE), jcb1pc)
  CC  = gcc
  CXX = /opt/openmpi-1.8.5/bin/mpiCC -std=c++11 -Wno-unused-result
  F77 = gfortran

  LINK      = mpiCC
  LINKFLAGS =
  LIBDIR    =
  LIBS      = scalapack-openmpi blacs-openmpi blacsCinit-openmpi boost_filesystem boost_system lapack blas

  INCLUDE  += /usr/local/include

  ifdef debug
    BUILD     = Debug
    CXXFLAGS  = -g
    CFLAGS    = -g
  else
    BUILD     = Release
    CXXFLAGS  = -O3
    CFLAGS    = -O3
    F77FLAGS  = -O2
  endif

  CXXFLAGS += -DAMBIT_USE_MPI -DAMBIT_USE_SCALAPACK

  CCDEP   = mpiCC -std=c++11
  DEPFLAG = -MM
endif

ifdef test
  INCLUDE += $(GTEST_INCLUDE_DIR)
  LIBDIR  += $(GTEST_LIBS_DIR)
  LIBS    += gtest pthread
endif

CXXFLAGS += $(addprefix -I, $(INCLUDE))
CFLAGS   += $(addprefix -I, $(INCLUDE))
DEPFLAG  += $(addprefix -I, $(INCLUDE))

CXXFLAGS += -DANGULAR_DATA_DIRECTORY=$(ANGULAR_DATA_DIRECTORY)

RANLIB = ranlib
AR = ar

LIBSUFFIX = lib.a
