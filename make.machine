# change this stuff only if you know what you are doing
# Options specific to Atomic source code are
#   -D_MPI       - To use MPI
#   -D_SCALAPACK - To use ScaLAPACK
#   -D_FSU=1     - Append underscores to fortran subroutine names (default)
#   -D_FSU=0     - Do not append underscores to fortran subroutine names

HOSTNAME = $(shell hostname)

MACHINE = default

ifeq ($(findstring vayu, $(HOSTNAME)), vayu)
  MACHINE = ncixe
endif
ifeq ($(findstring xe, $(HOSTNAME)), xe)
  MACHINE = ncixe
endif
ifeq ($(findstring katana, $(HOSTNAME)), katana)
  MACHINE = katana
endif
ifeq ($(HOSTNAME), newt.phys.unsw.edu.au)
  MACHINE = newt
endif

SRCDIR = $(shell pwd)
INCLUDE = $(SRCDIR)

ifeq ($(MACHINE), default)
  CC  = gcc
  CXX = g++
  F77 = gfortran

  LINK      = g++
  LINKFLAGS =
  LIBDIR    = /usr/local/lib
  LIBS      = blas lapack

  INCLUDE  += /usr/local/include

  ifdef debug
    BUILD     = Debug
    CXXFLAGS += -g
    CFLAGS   += -g
  else
    BUILD     = Release
    CXXFLAGS += -O3
    CFLAGS   += -O3
    F77FLAGS += -O2
  endif

  CCDEP   = gcc
  DEPFLAG = -MM
endif

ifeq ($(MACHINE), ncixe)
  CC  = icc
  CXX = mpiCC
  F77 = ifort

  LINK      = mpiCC
  LINKFLAGS = 
  LIBDIR    = $(MKL)/lib/em64t
  LIBOBJ    = $(MKL)/lib/em64t/libmkl_scalapack_lp64.a \
              $(MKL)/lib/em64t/libmkl_blacs_openmpi_lp64.a
  LIBS      = mkl_intel_lp64 mkl_intel_thread mkl_core mkl_em64t guide pthread

  INCLUDE  +=
  CXXFLAGS += -wd1125 -D_MPI -D_SCALAPACK

  ifdef debug
    BUILD     = Debug
    CFLAGS   += -g
    CXXFLAGS += -g
  else
    BUILD     = Release
    CFLAGS   += -O2
    CXXFLAGS += -O2
    F77FLAGS += -O2 -fpe0 -static -nofor_main
  endif

  CCDEP   = gcc
  DEPFLAG = -MM
endif

ifeq ($(MACHINE), katana)
  CC  = icc
  CXX = mpiCC
  F77 = ifort

  LINK      = mpiCC
  LINKFLAGS = 
  LIBDIR    = 
  LIBOBJ    = 
  LIBS      = mkl_intel_lp64 mkl_intel_thread mkl_core guide pthread

  INCLUDE  +=
  CXXFLAGS += -wd1125 -D_MPI # -D_SCALAPACK

  ifdef debug
    BUILD     = Debug
    CFLAGS   += -g
    CXXFLAGS += -g
  else
    BUILD     = Release
    CFLAGS   += -O2
    CXXFLAGS += -O3
    F77FLAGS += -O2 -fpe0 -static -nofor_main
  endif

  CCDEP   = gcc
  DEPFLAG = -MM
endif

ifeq ($(MACHINE), newt)
  CC  = gcc34
  CXX = g++34
  F77 = gcc34

  LINK      = g++34
  LINKFLAGS =
  LIBDIR    = /usr/local/lib
  LIBS      = blas lapack g2c

  INCLUDE  += /usr/local/include

  ifdef debug
    BUILD     = Debug
    CXXFLAGS += -g
    CFLAGS   += -g
  else
    BUILD     = Release
    CXXFLAGS += -O3
    CFLAGS   += -O3
    F77FLAGS += -O2
  endif

  CCDEP   = gcc34
  DEPFLAG = -MM
endif


CXXFLAGS += $(addprefix -I, $(INCLUDE))
CFLAGS   += $(addprefix -I, $(INCLUDE))
DEPFLAG  += $(addprefix -I, $(INCLUDE))

RANLIB = ranlib
AR = ar

LIBSUFFIX = lib.a
